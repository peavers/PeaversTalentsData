name: Release Management

on:
  pull_request:
    types: [closed]
    branches:
      - master
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: 'Release notes'
        required: false
        type: string

permissions:
  contents: write
  actions: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run release manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          CF_PROJECT_ID: ${{ secrets.CF_PROJECT_ID }}
        run: |
          chmod +x release_manager.py
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ./release_manager.py "${{ github.event.inputs.version_bump }}" "${{ github.event.inputs.release_notes }}"
          else
            ./release_manager.py patch "Auto-release from merged PR #${{ github.event.pull_request.number }}"
          fi
